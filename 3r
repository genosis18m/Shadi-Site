Project Overview
===============

Project Statistics:
Total Files: 38
Total Size: 2.80 MB

File Types:
  .jpg: 16 files
  .json: 7 files
  .tsx: 4 files
  no extension: 3 files
  .js: 3 files
  .ts: 3 files
  .html: 1 files
  .css: 1 files

Detected Technologies:
  - React
  - TypeScript

Folder Structure (Tree)
=====================
Legend: ✓ = Included in output, ✗ = Excluded from output

├── .bolt/
│   ├── config.json (39 B) ✓
│   └── prompt (401 B) ✓
├── .gitignore (258 B) ✓
├── 2r (45.79 KB) ✓
├── components.json (322 B) ✓
├── eslint.config.js (739 B) ✓
├── index.html (2.31 KB) ✓
├── package-lock.json (142.08 KB) ✗
├── package.json (897 B) ✓
├── Photos/
│   ├── WhatsApp Image 2025-06-20 at 21.15.36_f81ef63b.jpg (95.54 KB) ✗
│   ├── WhatsApp Image 2025-06-20 at 21.15.37_8ed72600.jpg (108.02 KB) ✗
│   ├── WhatsApp Image 2025-06-20 at 21.15.38_34e3864b.jpg (166.19 KB) ✗
│   ├── WhatsApp Image 2025-06-20 at 21.15.38_f7dafee8.jpg (133.83 KB) ✗
│   ├── WhatsApp Image 2025-06-20 at 21.15.39_2aa71b9a.jpg (108.80 KB) ✗
│   ├── WhatsApp Image 2025-06-20 at 21.15.40_1230a481.jpg (108.81 KB) ✗
│   ├── WhatsApp Image 2025-06-20 at 21.15.40_c99b6cc8.jpg (163.14 KB) ✗
│   ├── WhatsApp Image 2025-06-20 at 21.15.41_2e0c466f.jpg (163.71 KB) ✗
│   ├── WhatsApp Image 2025-06-20 at 21.15.42_89e8b3e5.jpg (204.12 KB) ✗
│   ├── WhatsApp Image 2025-06-20 at 21.15.43_2b38e96a.jpg (312.71 KB) ✗
│   ├── WhatsApp Image 2025-06-20 at 21.15.43_41653e4b.jpg (150.42 KB) ✗
│   ├── WhatsApp Image 2025-06-20 at 21.15.44_e8e7dd6e.jpg (165.66 KB) ✗
│   ├── WhatsApp Image 2025-06-20 at 21.15.45_67f680a0.jpg (143.92 KB) ✗
│   ├── WhatsApp Image 2025-06-20 at 21.15.45_d9019950.jpg (190.64 KB) ✗
│   └── WhatsApp Image 2025-06-20 at 21.15.46_1b6583ff.jpg (235.83 KB) ✗
├── postcss.config.js (81 B) ✓
├── src/
│   ├── App.tsx (25.14 KB) ✓
│   ├── components/
│   │   ├── HeroScrollDemo.tsx (5.98 KB) ✓
│   │   └── ui/
│   │       └── container-scroll-animation.tsx (2.53 KB) ✓
│   ├── index.css (2.75 KB) ✓
│   ├── lib/
│   │   └── utils.ts (165 B) ✓
│   ├── main.tsx (234 B) ✓
│   └── vite-env.d.ts (38 B) ✓
├── still_strong.jpg (182.23 KB) ✗
├── tailwind.config.js (170 B) ✓
├── tsconfig.app.json (552 B) ✓
├── tsconfig.json (212 B) ✗
├── tsconfig.node.json (479 B) ✓
└── vite.config.ts (327 B) ✓

==============

File Name: .bolt\config.json
Size: 39 B
Code:
{
  "template": "bolt-vite-react-ts"
}

-------- [ Separator ] ------

File Name: .bolt\prompt
Size: 401 B
Code:
For all designs I ask you to make, have them be beautiful, not cookie cutter. Make webpages that are fully featured and worthy for production.

By default, this template supports JSX syntax with Tailwind CSS classes, React hooks, and Lucide React for icons. Do not install other packages for UI themes, icons, etc unless absolutely necessary or I request them.

Use icons from lucide-react for logos.

-------- [ Separator ] ------

File Name: .gitignore
Size: 258 B
Code:
# Logs
logs
*.log
npm-debug.log*
yarn-debug.log*
yarn-error.log*
pnpm-debug.log*
lerna-debug.log*

node_modules
dist
dist-ssr
*.local

# Editor directories and files
.vscode/*
!.vscode/extensions.json
.idea
.DS_Store
*.suo
*.ntvs*
*.njsproj
*.sln
*.sw?
.env

-------- [ Separator ] ------

File Name: 2r
Size: 45.79 KB
Code:
Project Overview
===============

Project Statistics:
Total Files: 30
Total Size: 1.62 MB

File Types:
  .json: 7 files
  .png: 5 files
  .tsx: 4 files
  .jpg: 4 files
  .js: 3 files
  .ts: 3 files
  no extension: 2 files
  .html: 1 files
  .css: 1 files

Detected Technologies:
  - React
  - TypeScript

Folder Structure (Tree)
=====================
Legend: ✓ = Included in output, ✗ = Excluded from output

├── .bolt/
│   ├── config.json (39 B) ✓
│   └── prompt (401 B) ✓
├── .gitignore (258 B) ✓
├── components.json (322 B) ✓
├── eslint.config.js (739 B) ✓
├── index.html (2.31 KB) ✓
├── package-lock.json (142.08 KB) ✗
├── package.json (897 B) ✓
├── postcss.config.js (81 B) ✓
├── src/
│   ├── App.tsx (25.92 KB) ✓
│   ├── components/
│   │   ├── HeroScrollDemo.tsx (4.39 KB) ✓
│   │   └── ui/
│   │       └── container-scroll-animation.tsx (2.53 KB) ✓
│   ├── index.css (2.75 KB) ✓
│   ├── lib/
│   │   └── utils.ts (165 B) ✓
│   ├── main.tsx (234 B) ✓
│   ├── Photos/
│   │   ├── 1X_BET_PWD.png (5.51 KB) ✗
│   │   ├── blacke.jpg (72.38 KB) ✗
│   │   ├── blackie2.png (495.12 KB) ✗
│   │   ├── caaaaa.png (234.81 KB) ✗
│   │   ├── catt.png (422.38 KB) ✗
│   │   ├── flappy one.png (5.02 KB) ✗
│   │   ├── Profile_pic.jpg (30.93 KB) ✗
│   │   └── SIGNATURE_MOHIT.jpg (25.43 KB) ✗
│   └── vite-env.d.ts (38 B) ✓
├── still_strong.jpg (182.23 KB) ✗
├── tailwind.config.js (170 B) ✓
├── tsconfig.app.json (552 B) ✓
├── tsconfig.json (212 B) ✗
├── tsconfig.node.json (479 B) ✓
└── vite.config.ts (327 B) ✓

==============

File Name: .bolt\config.json
Size: 39 B
Code:
{
  "template": "bolt-vite-react-ts"
}

-------- [ Separator ] ------

File Name: .bolt\prompt
Size: 401 B
Code:
For all designs I ask you to make, have them be beautiful, not cookie cutter. Make webpages that are fully featured and worthy for production.

By default, this template supports JSX syntax with Tailwind CSS classes, React hooks, and Lucide React for icons. Do not install other packages for UI themes, icons, etc unless absolutely necessary or I request them.

Use icons from lucide-react for logos.

-------- [ Separator ] ------

File Name: .gitignore
Size: 258 B
Code:
# Logs
logs
*.log
npm-debug.log*
yarn-debug.log*
yarn-error.log*
pnpm-debug.log*
lerna-debug.log*

node_modules
dist
dist-ssr
*.local

# Editor directories and files
.vscode/*
!.vscode/extensions.json
.idea
.DS_Store
*.suo
*.ntvs*
*.njsproj
*.sln
*.sw?
.env

-------- [ Separator ] ------

File Name: components.json
Size: 322 B
Code:
{
  "$schema": "https://ui.shadcn.com/schema.json",
  "style": "default",
  "rsc": false,
  "tsx": true,
  "tailwind": {
    "config": "tailwind.config.js",
    "css": "src/index.css",
    "baseColor": "slate",
    "cssVariables": true
  },
  "aliases": {
    "components": "@/components",
    "utils": "@/lib/utils"
  }
}
-------- [ Separator ] ------

File Name: eslint.config.js
Size: 739 B
Code:
import js from '@eslint/js';
import globals from 'globals';
import reactHooks from 'eslint-plugin-react-hooks';
import reactRefresh from 'eslint-plugin-react-refresh';
import tseslint from 'typescript-eslint';

export default tseslint.config(
  { ignores: ['dist'] },
  {
    extends: [js.configs.recommended, ...tseslint.configs.recommended],
    files: ['**/*.{ts,tsx}'],
    languageOptions: {
      ecmaVersion: 2020,
      globals: globals.browser,
    },
    plugins: {
      'react-hooks': reactHooks,
      'react-refresh': reactRefresh,
    },
    rules: {
      ...reactHooks.configs.recommended.rules,
      'react-refresh/only-export-components': [
        'warn',
        { allowConstantExport: true },
      ],
    },
  }
);

-------- [ Separator ] ------

File Name: index.html
Size: 2.31 KB
Code:
<!doctype html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <link rel="icon" type="image/svg+xml" href="/vite.svg" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Sanjeev & Deepali - 23 Years of Love | संजीव आणि दीपाली</title>
    <meta name="description" content="Celebrating 23 years of love - Sanjeev and Deepali's wedding memories from April 25, 2002">
    
    <!-- Google Fonts for beautiful typography -->
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link href="https://fonts.googleapis.com/css2?family=Crimson+Text:ital,wght@0,400;0,600;1,400&family=Great+Vibes&family=Playfair+Display:ital,wght@0,400;0,600;0,700;1,400&family=Noto+Sans+Devanagari:wght@300;400;600;700&family=Cormorant+Garamond:ital,wght@0,300;0,400;0,600;1,400&display=swap" rel="stylesheet">
    
    <style>
      /* Beautiful font families */
      .font-elegant {
        font-family: 'Playfair Display', serif;
      }
      .font-script {
        font-family: 'Great Vibes', cursive;
      }
      .font-marathi {
        font-family: 'Noto Sans Devanagari', sans-serif;
      }
      .font-body {
        font-family: 'Crimson Text', serif;
      }
      .font-classic {
        font-family: 'Cormorant Garamond', serif;
      }
      
      /* Prevent text selection on decorative elements */
      .no-select {
        -webkit-user-select: none;
        -moz-user-select: none;
        -ms-user-select: none;
        user-select: none;
      }

      /* Pink click effect */
      .click-effect {
        position: relative;
        overflow: hidden;
      }
      
      .click-effect::after {
        content: '';
        position: absolute;
        top: 50%;
        left: 50%;
        width: 0;
        height: 0;
        background: radial-gradient(circle, rgba(255, 182, 193, 0.6) 0%, transparent 70%);
        border-radius: 50%;
        transform: translate(-50%, -50%);
        transition: width 0.6s ease, height 0.6s ease;
        pointer-events: none;
      }
      
      .click-effect:active::after {
        width: 200px;
        height: 200px;
      }
    </style>
  </head>
  <body>
    <div id="root"></div>
    <script type="module" src="/src/main.tsx"></script>
  </body>
</html>
-------- [ Separator ] ------

File Name: package.json
Size: 897 B
Code:
{
  "name": "vite-react-typescript-starter",
  "private": true,
  "version": "0.0.0",
  "type": "module",
  "scripts": {
    "dev": "vite",
    "build": "vite build",
    "lint": "eslint .",
    "preview": "vite preview"
  },
  "dependencies": {
    "framer-motion": "^10.16.16",
    "lucide-react": "^0.344.0",
    "react": "^18.3.1",
    "react-dom": "^18.3.1",
    "clsx": "^2.0.0",
    "tailwind-merge": "^2.2.0"
  },
  "devDependencies": {
    "@eslint/js": "^9.9.1",
    "@types/react": "^18.3.5",
    "@types/react-dom": "^18.3.0",
    "@vitejs/plugin-react": "^4.3.1",
    "autoprefixer": "^10.4.18",
    "eslint": "^9.9.1",
    "eslint-plugin-react-hooks": "^5.1.0-rc.0",
    "eslint-plugin-react-refresh": "^0.4.11",
    "globals": "^15.9.0",
    "postcss": "^8.4.35",
    "tailwindcss": "^3.4.1",
    "typescript": "^5.5.3",
    "typescript-eslint": "^8.3.0",
    "vite": "^5.4.2"
  }
}
-------- [ Separator ] ------

File Name: postcss.config.js
Size: 81 B
Code:
export default {
  plugins: {
    tailwindcss: {},
    autoprefixer: {},
  },
};

-------- [ Separator ] ------

File Name: src\App.tsx
Size: 25.92 KB
Code:
import React, { useEffect, useState } from 'react';
import { motion, AnimatePresence } from 'framer-motion';
import { Heart, Star, Sparkles, Calendar, Camera } from 'lucide-react';
import { HeroScrollDemo } from '@/components/HeroScrollDemo';

// Enhanced Marathi quotes with English translations
const loveQuotes = [
  {
    marathi: "प्रेम म्हणजे दोन हृदयांचा एकच ठोका",
    english: "Love is two hearts beating as one",
    id: 1
  },
  {
    marathi: "तुझ्याशिवाय माझे जीवन अधूरे आहे",
    english: "Without you, my life is incomplete",
    id: 2
  },
  {
    marathi: "आमचे प्रेम चांद्रातारांसारखे निरंतर आहे",
    english: "Our love is eternal like the moon and stars",
    id: 3
  },
  {
    marathi: "तू माझा साथी, मित्र आणि प्रेयसी आहेस",
    english: "You are my companion, friend, and beloved",
    id: 4
  },
  {
    marathi: "आमचे लग्न स्वर्गात ठरले होते",
    english: "Our marriage was made in heaven",
    id: 5
  },
  {
    marathi: "प्रेम हे जीवनातील सर्वात सुंदर भावना आहे",
    english: "Love is life's most beautiful emotion",
    id: 6
  },
  {
    marathi: "तेईस वर्षे, एकच प्रेम",
    english: "Twenty-three years, one love",
    id: 7
  },
  {
    marathi: "आमची प्रेमकहाणी कधीच संपणार नाही",
    english: "Our love story will never end",
    id: 8
  }
];

// Additional inspirational quotes for sections
const sectionQuotes = [
  {
    marathi: "प्रेमात वय नसते, फक्त भावना असते",
    english: "Love has no age, only emotions"
  },
  {
    marathi: "खरे प्रेम वेळेसोबत वाढत जाते",
    english: "True love grows with time"
  },
  {
    marathi: "आमचे बंध अजूनही मजबूत आहे",
    english: "Our bond is still strong"
  },
  {
    marathi: "प्रेमाची शक्ती अजेय आहे",
    english: "The power of love is invincible"
  },
  {
    marathi: "आमचे हृदय एकत्र धडधडते",
    english: "Our hearts beat together"
  }
];

// Enhanced Floating Hearts Component with more variety
const FloatingHearts = () => {
  const [hearts, setHearts] = useState<Array<{ 
    id: number; 
    left: number; 
    size: number; 
    color: string;
    delay: number;
  }>>([]);

  const heartColors = ['text-pink-400', 'text-red-400', 'text-rose-400', 'text-pink-500', 'text-red-500'];

  useEffect(() => {
    const interval = setInterval(() => {
      const newHeart = {
        id: Date.now() + Math.random(),
        left: Math.random() * 100,
        size: Math.random() * 25 + 15,
        color: heartColors[Math.floor(Math.random() * heartColors.length)],
        delay: Math.random() * 2
      };
      setHearts(prev => [...prev, newHeart]);
      
      setTimeout(() => {
        setHearts(prev => prev.filter(heart => heart.id !== newHeart.id));
      }, 6000);
    }, 600);

    return () => clearInterval(interval);
  }, []);

  return (
    <div className="fixed inset-0 pointer-events-none z-10">
      <AnimatePresence>
        {hearts.map(heart => (
          <motion.div
            key={heart.id}
            initial={{ y: '100vh', opacity: 0, rotate: 0, scale: 0 }}
            animate={{ 
              y: '-20vh', 
              opacity: [0, 1, 1, 0],
              rotate: [0, 180, 360],
              scale: [0, 1, 1, 0],
              x: [0, 50, -30, 20, 0]
            }}
            exit={{ opacity: 0, scale: 0 }}
            transition={{ 
              duration: 6,
              ease: "easeOut",
              times: [0, 0.1, 0.8, 1],
              delay: heart.delay
            }}
            className="absolute"
            style={{ left: `${heart.left}%` }}
          >
            <Heart 
              className={`${heart.color} fill-current drop-shadow-lg`}
              style={{ width: heart.size, height: heart.size }}
            />
          </motion.div>
        ))}
      </AnimatePresence>
    </div>
  );
};

// Enhanced Floating Sparkles
const FloatingSparkles = () => {
  const [sparkles, setSparkles] = useState<Array<{ 
    id: number; 
    left: number; 
    top: number;
    size: number; 
    delay: number;
  }>>([]);

  useEffect(() => {
    const interval = setInterval(() => {
      const newSparkle = {
        id: Date.now() + Math.random(),
        left: Math.random() * 100,
        top: Math.random() * 100,
        size: Math.random() * 15 + 10,
        delay: Math.random() * 3
      };
      setSparkles(prev => [...prev, newSparkle]);
      
      setTimeout(() => {
        setSparkles(prev => prev.filter(sparkle => sparkle.id !== newSparkle.id));
      }, 4000);
    }, 1200);

    return () => clearInterval(interval);
  }, []);

  return (
    <div className="fixed inset-0 pointer-events-none z-10">
      <AnimatePresence>
        {sparkles.map(sparkle => (
          <motion.div
            key={sparkle.id}
            initial={{ opacity: 0, scale: 0, rotate: 0 }}
            animate={{ 
              opacity: [0, 1, 1, 0],
              scale: [0, 1, 1.2, 0],
              rotate: [0, 180, 360]
            }}
            exit={{ opacity: 0, scale: 0 }}
            transition={{ 
              duration: 4,
              ease: "easeInOut",
              delay: sparkle.delay
            }}
            className="absolute"
            style={{ 
              left: `${sparkle.left}%`,
              top: `${sparkle.top}%`
            }}
          >
            <Sparkles 
              className="text-yellow-300 fill-current drop-shadow-lg"
              style={{ width: sparkle.size, height: sparkle.size }}
            />
          </motion.div>
        ))}
      </AnimatePresence>
    </div>
  );
};

// Enhanced Floating Balloon Component
const FloatingBalloon = ({ quote, delay }: { quote: typeof loveQuotes[0], delay: number }) => {
  return (
    <motion.div 
      className="absolute"
      style={{
        left: `${Math.random() * 80 + 10}%`,
        top: `${Math.random() * 60 + 20}%`
      }}
      initial={{ y: 100, opacity: 0, scale: 0 }}
      animate={{ 
        y: [0, -30, -15, 0],
        opacity: 1,
        scale: 1,
        rotate: [-3, 2, -1, -3]
      }}
      transition={{
        duration: 8,
        repeat: Infinity,
        delay: delay,
        ease: "easeInOut"
      }}
    >
      <div className="relative group cursor-pointer">
        <motion.div 
          className="transform hover:scale-110 transition-transform duration-300"
          whileHover={{ scale: 1.2, y: -10 }}
          whileTap={{ scale: 0.9 }}
        >
          {/* Enhanced Balloon */}
          <div className="w-20 h-24 bg-gradient-to-b from-pink-400 via-rose-400 to-red-500 rounded-full relative shadow-2xl">
            <div className="absolute inset-2 bg-gradient-to-b from-pink-300 to-pink-400 rounded-full opacity-70"></div>
            <div className="absolute top-3 left-4 w-8 h-8 bg-white opacity-50 rounded-full"></div>
            <div className="absolute top-6 left-6 w-3 h-3 bg-white opacity-80 rounded-full"></div>
          </div>
          {/* String */}
          <div className="w-0.5 h-12 bg-gray-700 mx-auto shadow-sm"></div>
        </motion.div>
        
        {/* Enhanced Quote tooltip */}
        <div className="absolute bottom-full left-1/2 transform -translate-x-1/2 mb-4 opacity-0 group-hover:opacity-100 transition-all duration-500 pointer-events-none z-50">
          <motion.div 
            className="bg-white/95 backdrop-blur-sm rounded-2xl p-6 shadow-2xl border-2 border-pink-200 min-w-80"
            initial={{ scale: 0.8, y: 10 }}
            whileHover={{ scale: 1, y: 0 }}
            transition={{ duration: 0.3 }}
          >
            <p className="text-purple-800 font-bold text-lg mb-3 font-marathi">{quote.marathi}</p>
            <p className="text-pink-600 text-base italic font-body">{quote.english}</p>
            <div className="absolute top-full left-1/2 transform -translate-x-1/2 border-l-10 border-r-10 border-t-10 border-transparent border-t-white/95"></div>
          </motion.div>
        </div>
      </div>
    </motion.div>
  );
};

// Google Drive Video Component
const GoogleDriveVideo = ({ title, description, driveId, index }: {
  title: string;
  description: string;
  driveId: string;
  index: number;
}) => {
  return (
    <motion.div 
      className="bg-white/15 backdrop-blur-md rounded-3xl p-6 shadow-2xl border border-pink-200/30 hover:shadow-pink-500/20 transition-all duration-500 click-effect"
      initial={{ opacity: 0, y: 50, scale: 0.9 }}
      whileInView={{ opacity: 1, y: 0, scale: 1 }}
      transition={{ delay: index * 0.2, duration: 0.8 }}
      whileHover={{ scale: 1.03, y: -8 }}
      viewport={{ once: true }}
    >
      <div className="relative overflow-hidden rounded-2xl mb-6 group">
        <iframe
          src={`https://drive.google.com/file/d/${driveId}/preview`}
          className="w-full h-64 rounded-2xl"
          allow="autoplay"
          title={title}
        ></iframe>
        <div className="absolute inset-0 bg-gradient-to-t from-black/30 to-transparent opacity-0 group-hover:opacity-100 transition-opacity duration-300 rounded-2xl"></div>
      </div>
      <motion.h3 
        className="text-2xl font-bold text-white mb-3 font-elegant"
        initial={{ opacity: 0 }}
        whileInView={{ opacity: 1 }}
        transition={{ delay: index * 0.3 + 0.2 }}
      >
        {title}
      </motion.h3>
      <motion.p 
        className="text-pink-100 text-base font-body leading-relaxed"
        initial={{ opacity: 0 }}
        whileInView={{ opacity: 1 }}
        transition={{ delay: index * 0.3 + 0.4 }}
      >
        {description}
      </motion.p>
    </motion.div>
  );
};

// Photo Upload Placeholder Component
const PhotoPlaceholder = ({ title, subtitle }: { title: string; subtitle?: string }) => {
  return (
    <motion.div 
      className="bg-white/10 backdrop-blur-md rounded-3xl p-8 border-2 border-dashed border-pink-300/50 hover:border-pink-300 transition-all duration-300 click-effect"
      whileHover={{ scale: 1.02, borderColor: 'rgb(249 168 212)' }}
      whileTap={{ scale: 0.98 }}
      initial={{ opacity: 0, y: 30 }}
      whileInView={{ opacity: 1, y: 0 }}
      transition={{ duration: 0.6 }}
      viewport={{ once: true }}
    >
      <div className="text-center space-y-4">
        <motion.div
          animate={{ rotate: [0, 10, -10, 0] }}
          transition={{ duration: 2, repeat: Infinity, ease: "easeInOut" }}
        >
          <Camera className="w-16 h-16 text-pink-300 mx-auto" />
        </motion.div>
        <h3 className="text-2xl font-bold text-white font-elegant">{title}</h3>
        {subtitle && <p className="text-pink-200 font-body">{subtitle}</p>}
        <p className="text-pink-100 text-sm font-body">
          <div className="grid grid-cols-2 md:grid-cols-4 gap-6">
  <img src="/photos/1X_BET_PWD.png" alt="1X_BET_PWD" className="rounded-xl object-cover w-full aspect-square" />
  <img src="/photos/blacke.jpg" alt="blacke" className="rounded-xl object-cover w-full aspect-square" />
  <img src="/photos/blackie2.png" alt="blackie2" className="rounded-xl object-cover w-full aspect-square" />
  <img src="/photos/caaaaa.png" alt="caaaaa" className="rounded-xl object-cover w-full aspect-square" />
  <img src="/photos/catt.png" alt="catt" className="rounded-xl object-cover w-full aspect-square" />
  <img src="/photos/flappy one.png" alt="flappy one" className="rounded-xl object-cover w-full aspect-square" />
  <img src="/photos/Profile_pic.jpg" alt="Profile_pic" className="rounded-xl object-cover w-full aspect-square" />
  <img src="/photos/SIGNATURE_MOHIT.jpg" alt="SIGNATURE_MOHIT" className="rounded-xl object-cover w-full aspect-square" />
</div>

        </p>
      </div>
    </motion.div>
  );
};

function App() {
  return (
    <div className="min-h-screen relative overflow-hidden">
      {/* Professional Pink/Red Gradient Background */}
      <div className="fixed inset-0 bg-gradient-to-br from-pink-500 via-rose-500 via-red-400 to-pink-600 animate-gradient-shift"></div>
      
      {/* Enhanced Floating Animations */}
      <FloatingHearts />
      <FloatingSparkles />
      
      {/* Floating Balloons */}
      <div className="fixed inset-0 pointer-events-none z-20">
        {loveQuotes.map((quote, index) => (
          <FloatingBalloon 
            key={quote.id} 
            quote={quote} 
            delay={index * 2} 
          />
        ))}
      </div>

      {/* Main Content */}
      <div className="relative z-30">
        {/* Hero Section with Scroll Animation */}
        <section className="min-h-screen">
          <HeroScrollDemo />
        </section>

        {/* Enhanced Inspirational Quote Section */}
        <section className="py-20 px-4">
          <motion.div 
            className="max-w-4xl mx-auto text-center"
            initial={{ opacity: 0, scale: 0.9 }}
            whileInView={{ opacity: 1, scale: 1 }}
            transition={{ duration: 0.8 }}
            viewport={{ once: true }}
          >
            <motion.div 
              className="bg-white/15 backdrop-blur-md rounded-3xl p-12 border border-pink-200/30 relative overflow-hidden"
              whileHover={{ scale: 1.02 }}
              transition={{ duration: 0.3 }}
            >
              {/* Decorative elements */}
              <div className="absolute top-4 left-4">
                <Heart className="w-8 h-8 text-pink-300 fill-current opacity-30" />
              </div>
              <div className="absolute bottom-4 right-4">
                <Sparkles className="w-8 h-8 text-yellow-300 opacity-30" />
              </div>
              
              <motion.h3 
                className="text-4xl font-bold text-white mb-6 font-marathi"
                initial={{ opacity: 0, y: 20 }}
                whileInView={{ opacity: 1, y: 0 }}
                transition={{ delay: 0.2 }}
              >
                {sectionQuotes[0].marathi}
              </motion.h3>
              <motion.p 
                className="text-xl text-pink-100 italic font-body"
                initial={{ opacity: 0, y: 20 }}
                whileInView={{ opacity: 1, y: 0 }}
                transition={{ delay: 0.4 }}
              >
                {sectionQuotes[0].english}
              </motion.p>
            </motion.div>
          </motion.div>
        </section>

        {/* Enhanced Video Section */}
        <section className="py-20 px-4">
          <div className="max-w-7xl mx-auto">
            <motion.div 
              className="text-center mb-16"
              initial={{ opacity: 0, y: 50 }}
              whileInView={{ opacity: 1, y: 0 }}
              transition={{ duration: 0.8 }}
              viewport={{ once: true }}
            >
              <motion.h2 
                className="text-5xl font-bold text-white mb-6 font-elegant"
                initial={{ scale: 0.8 }}
                whileInView={{ scale: 1 }}
                transition={{ duration: 0.6, delay: 0.2 }}
              >
                आमच्या लग्नाचे व्हिडिओ
              </motion.h2>
              <motion.p 
                className="text-pink-100 text-2xl italic font-body mb-4"
                initial={{ opacity: 0 }}
                whileInView={{ opacity: 1 }}
                transition={{ delay: 0.4 }}
              >
                Our Wedding Videos
              </motion.p>
              <motion.div 
                className="flex items-center justify-center mt-6"
                initial={{ opacity: 0, scale: 0 }}
                whileInView={{ opacity: 1, scale: 1 }}
                transition={{ delay: 0.6, duration: 0.5 }}
              >
                <Star className="w-6 h-6 text-yellow-300 fill-current" />
                <Star className="w-8 h-8 text-yellow-300 fill-current mx-3" />
                <Star className="w-6 h-6 text-yellow-300 fill-current" />
              </motion.div>
            </motion.div>

            <div className="grid md:grid-cols-3 gap-8 mb-16">
<div
  style={{
    border: '3px solid #E75480',
    borderRadius: 20,
    padding: 15,
    margin: '20px 0',
    background: '#FFD1E3',
    boxShadow: '0 4px 12px rgba(231, 84, 128, 0.18)',
    maxWidth: 390,
    textAlign: 'center'
  }}
>
  <h3
    style={{
      fontWeight: 800,
      fontSize: '1.6em',
      marginBottom: 18,
      background: 'linear-gradient(90deg, #ffecd2 0%, #fcb69f 40%, #e75480 70%, #fcb69f 100%)',
      WebkitBackgroundClip: 'text',
      WebkitTextFillColor: 'transparent',
      textShadow: '0 2px 8px #fff, 0 1px 1px #e75480'
    }}
  >
    श्रीमंत पूजन
  </h3>
  <div style={{ display: 'flex', justifyContent: 'center' }}>
    <iframe
      src="https://drive.google.com/file/d/1MSW-qaKZFn4yqebM1gHpOT8y2JXfJPPd/preview"
      width="370"
      height="480"
      allow="autoplay"
      style={{
        borderRadius: 15,
        border: '2px solid #e75480',
        boxShadow: '0 2px 10px rgba(231, 84, 128, 0.16)'
      }}
      title="श्रीमंत पूजन"
    ></iframe>
  </div>
</div>

<div
  style={{
    border: '3px solid #E75480',
    borderRadius: 20,
    padding: 15,
    margin: '20px 0',
    background: '#FFD1E3',
    boxShadow: '0 4px 12px rgba(231, 84, 128, 0.18)',
    maxWidth: 390,
    textAlign: 'center'
  }}
>
  <h3
    style={{
      fontWeight: 800,
      fontSize: '1.6em',
      marginBottom: 18,
      background: 'linear-gradient(90deg, #ffecd2 0%, #fcb69f 40%, #e75480 70%, #fcb69f 100%)',
      WebkitBackgroundClip: 'text',
      WebkitTextFillColor: 'transparent',
      textShadow: '0 2px 8px #fff, 0 1px 1px #e75480'
    }}
  >
    वरात
  </h3>
  <div style={{ display: 'flex', justifyContent: 'center' }}>
    <iframe
      src="https://drive.google.com/file/d/17QkLS05IX4GVMdpsWR3SPHBGRpi-ywEa/preview"
      width="370"
      height="480"
      allow="autoplay"
      style={{
        borderRadius: 15,
        border: '2px solid #e75480',
        boxShadow: '0 2px 10px rgba(231, 84, 128, 0.16)'
      }}
      title="बारात"
    ></iframe>
  </div>
</div>

<div
  style={{
    border: '3px solid #E75480',
    borderRadius: 20,
    padding: 15,
    margin: '20px 0',
    background: '#FFD1E3',
    boxShadow: '0 4px 12px rgba(231, 84, 128, 0.18)',
    maxWidth: 390,
    textAlign: 'center'
  }}
>
  <h3
    style={{
      fontWeight: 800,
      fontSize: '1.6em',
      marginBottom: 18,
      background: 'linear-gradient(90deg, #ffecd2 0%, #fcb69f 40%, #e75480 70%, #fcb69f 100%)',
      WebkitBackgroundClip: 'text',
      WebkitTextFillColor: 'transparent',
      textShadow: '0 2px 8px #fff, 0 1px 1px #e75480'
    }}
  >
    लग्न
  </h3>
  <div style={{ display: 'flex', justifyContent: 'center' }}>
    <iframe
      src="https://drive.google.com/file/d/1h_msCOsqAzFlz89oN8na2T3-pybprLSD/preview"
      width="370"
      height="480"
      allow="autoplay"
      style={{
        borderRadius: 15,
        border: '2px solid #e75480',
        boxShadow: '0 2px 10px rgba(231, 84, 128, 0.16)'
      }}
      title="मुख्य शादी"
    ></iframe>
  </div>
</div>

            </div>
          </div>
        </section>

        {/* Another Enhanced Quote Section */}
        <section className="py-16 px-4">
          <motion.div 
            className="max-w-4xl mx-auto text-center"
            initial={{ opacity: 0, rotateX: 20 }}
            whileInView={{ opacity: 1, rotateX: 0 }}
            transition={{ duration: 0.8 }}
            viewport={{ once: true }}
          >
            <div className="bg-white/15 backdrop-blur-md rounded-3xl p-12 border border-pink-200/30 relative">
              <motion.h3 
                className="text-4xl font-bold text-white mb-6 font-marathi"
                initial={{ opacity: 0, scale: 0.8 }}
                whileInView={{ opacity: 1, scale: 1 }}
                transition={{ delay: 0.2 }}
              >
                {sectionQuotes[1].marathi}
              </motion.h3>
              <motion.p 
                className="text-xl text-pink-100 italic font-body"
                initial={{ opacity: 0, y: 20 }}
                whileInView={{ opacity: 1, y: 0 }}
                transition={{ delay: 0.4 }}
              >
                {sectionQuotes[1].english}
              </motion.p>
            </div>
          </motion.div>
        </section>

        {/* Enhanced Still Going Strong Section */}
        <section className="py-20 px-4">
          <div className="max-w-4xl mx-auto text-center">
            <motion.div 
              className="bg-white/20 backdrop-blur-md rounded-3xl p-12 border border-pink-200/30 shadow-2xl relative overflow-hidden"
              initial={{ opacity: 0, scale: 0.8, y: 50 }}
              whileInView={{ opacity: 1, scale: 1, y: 0 }}
              transition={{ duration: 1 }}
              viewport={{ once: true }}
              whileHover={{ scale: 1.02 }}
            >
              {/* Enhanced decorative elements */}
              <motion.div 
                className="absolute top-6 left-6"
                animate={{ rotate: 360 }}
                transition={{ duration: 20, repeat: Infinity, ease: "linear" }}
              >
                <Heart className="w-12 h-12 text-pink-300 fill-current opacity-20" />
              </motion.div>
              <motion.div 
                className="absolute bottom-6 right-6"
                animate={{ rotate: -360 }}
                transition={{ duration: 15, repeat: Infinity, ease: "linear" }}
              >
                <Sparkles className="w-10 h-10 text-yellow-300 opacity-20" />
              </motion.div>
              
              {/* Photo placeholder for couple's current photo */}
<motion.div 
  className="mb-8 flex justify-center"
  initial={{ opacity: 0, scale: 0.8 }}
  whileInView={{ opacity: 1, scale: 1 }}
  transition={{ delay: 0.3 }}
>
  <img
    src="/still_strong.jpg"

    alt="Still Going Strong"
    className="rounded-3xl border-4 border-pink-200 shadow-xl max-w-xs"
    style={{ maxHeight: 320, objectFit: 'cover' }}
  />
</motion.div>

              <motion.h3 
                className="text-5xl font-bold text-white mb-4 font-elegant"
                initial={{ opacity: 0, y: 30 }}
                whileInView={{ opacity: 1, y: 0 }}
                transition={{ delay: 0.5 }}
              >
             Love not fading away
              </motion.h3>
              
              <motion.p 
                className="text-1.5xl text-pink-100 italic font-marathi"
                initial={{ opacity: 0, y: 20 }}
                whileInView={{ opacity: 1, y: 0 }}
                transition={{ delay: 0.7 }}
              >
              वय वाढलंय, पण प्रेम अजून तेच जुनं आणि खास आहे
              </motion.p>
              
              <motion.p 
                className="text-xl text-pink-200 italic font-body mb-8"
                initial={{ opacity: 0, y: 20 }}
                whileInView={{ opacity: 1, y: 0 }}
                transition={{ delay: 0.9 }}
              >
              We've aged, but our love is still the same—old and special.
              </motion.p> 

              <motion.div 
                className="flex items-center justify-center space-x-6"
                initial={{ opacity: 0, scale: 0 }}
                whileInView={{ opacity: 1, scale: 1 }}
                transition={{ delay: 1.1, type: "spring", stiffness: 200 }}
              >
                <motion.div
                  animate={{ scale: [1, 1.2, 1] }}
                  transition={{ duration: 2, repeat: Infinity }}
                >
                  <Heart className="w-12 h-12 text-red-400 fill-current" />
                </motion.div>
                <span className="text-4xl font-bold text-white font-elegant">
                  संजीव ♥ दीपाली
                </span>
                <motion.div
                  animate={{ scale: [1, 1.2, 1] }}
                  transition={{ duration: 2, repeat: Infinity, delay: 1 }}
                >
                  <Heart className="w-12 h-12 text-red-400 fill-current" />
                </motion.div>
              </motion.div>

              <motion.p 
                className="text-pink-200 text-lg mt-6 font-body"
                initial={{ opacity: 0 }}
                whileInView={{ opacity: 1 }}
                transition={{ delay: 1.3 }}
              >
                23 Years of Love • 2002 - 2025
              </motion.p>
            </motion.div>
          </div>
        </section>

        {/* Final Quote Section */}
        <section className="py-16 px-4">
          <motion.div 
            className="max-w-4xl mx-auto text-center"
            initial={{ opacity: 0 }}
            whileInView={{ opacity: 1 }}
            transition={{ duration: 1 }}
            viewport={{ once: true }}
          >
            <div className="bg-white/10 backdrop-blur-md rounded-3xl p-12 border border-pink-200/30">
              <motion.h3 
                className="text-4xl font-bold text-white mb-6 font-marathi"
                initial={{ opacity: 0, rotateY: 20 }}
                whileInView={{ opacity: 1, rotateY: 0 }}
                transition={{ delay: 0.2 }}
              >
              पूर्वी तिला गुलाब द्यायचो, आता pain balm देतो… प्रेमाचं evolution बघा!
              </motion.h3>
              <motion.p 
                className="text-xl text-pink-100 italic font-body"
                initial={{ opacity: 0, rotateY: -20 }}
                whileInView={{ opacity: 1, rotateY: 0 }}
                transition={{ delay: 0.4 }}
              >
              I used to give her roses, now I hand her pain balm… witness the evolution of love!
              </motion.p>
            </div>
          </motion.div>
        </section>
      </div>
    </div>
  );
}

export default App;
-------- [ Separator ] ------

File Name: src\components\HeroScrollDemo.tsx
Size: 4.39 KB
Code:
import React from "react";
import { ContainerScroll } from "@/components/ui/container-scroll-animation";
import { Heart, Sparkles, Calendar } from "lucide-react";
import { motion } from "framer-motion";

export function HeroScrollDemo() {
  return (
    <div className="flex flex-col overflow-hidden">
      <ContainerScroll
        titleComponent={
          <motion.div 
            className="space-y-8"
            initial={{ opacity: 0, y: 50 }}
            animate={{ opacity: 1, y: 0 }}
            transition={{ duration: 1.2 }}
          >
            <div className="flex items-center justify-center space-x-4 mb-6">
              <Heart className="w-12 h-12 text-pink-500 fill-current animate-pulse" />
              <Sparkles className="w-10 h-10 text-yellow-400 animate-spin-slow" />
              <Heart className="w-12 h-12 text-red-500 fill-current animate-pulse" />
            </div>
            
            <h1 className="text-4xl md:text-6xl font-bold text-white drop-shadow-2xl font-elegant text-center">
              <span className="bg-gradient-to-r from-yellow-200 to-pink-200 bg-clip-text text-transparent">
                संजीव आणि दीपाली
              </span>
            </h1>
            
            <p className="text-2xl md:text-3xl text-pink-100 font-marathi text-center">
              प्रेमाची २३ वर्षांची गाथा
            </p>
            
            <p className="text-lg md:text-xl text-pink-200 italic font-body text-center">
              23 Years of Love Story
            </p>
            
            <div className="flex items-center justify-center space-x-4 mt-8">
              <Calendar className="w-6 h-6 text-pink-200" />
              <div className="text-center">
                <p className="text-white text-xl font-semibold font-marathi">
                  २५ एप्रिल २००२
                </p>
                <p className="text-pink-100 text-base font-body">
                  April 25, 2002
                </p>
              </div>
            </div>
          </motion.div>
        }
      >
        <div className="relative h-full w-full">
          {/* Photo placeholder with beautiful styling */}
          <motion.div 
            className="h-full w-full bg-gradient-to-br from-pink-50 to-rose-100 rounded-2xl border-4 border-pink-200/50 flex items-center justify-center relative overflow-hidden"
            initial={{ opacity: 0, scale: 0.9 }}
            animate={{ opacity: 1, scale: 1 }}
            transition={{ delay: 0.5, duration: 0.8 }}
          >
            {/* Decorative elements */}
            <div className="absolute top-4 left-4">
              <Heart className="w-8 h-8 text-pink-400 fill-current opacity-60" />
            </div>
            <div className="absolute top-4 right-4">
              <Heart className="w-8 h-8 text-red-400 fill-current opacity-60" />
            </div>
            <div className="absolute bottom-4 left-4">
              <Sparkles className="w-6 h-6 text-yellow-400 opacity-60" />
            </div>
            <div className="absolute bottom-4 right-4">
              <Sparkles className="w-6 h-6 text-yellow-400 opacity-60" />
            </div>
            
            {/* Main content */}
            <div className="text-center space-y-6 p-8">
              <div className="w-32 h-32 mx-auto bg-pink-200 rounded-full flex items-center justify-center border-4 border-pink-300">
                <Heart className="w-16 h-16 text-pink-600 fill-current" />
              </div>
              
              <div className="space-y-3">
                <h3 className="text-3xl font-bold text-pink-800 font-elegant">
                  Wedding Memories
                </h3>
                <p className="text-pink-600 font-marathi text-xl">
                  लग्नाच्या आठवणी
                </p>
                <p className="text-pink-500 font-body">
                  Paste your beautiful wedding photos here
                </p>
              </div>
              
              <div className="bg-pink-100 rounded-lg p-4 border-2 border-dashed border-pink-300">
                <p className="text-pink-700 text-sm font-body">
                  Replace this section with your wedding photos from April 25, 2002
                </p>
              </div>
            </div>
          </motion.div>
        </div>
      </ContainerScroll>
    </div>
  );
}
-------- [ Separator ] ------

File Name: src\components\ui\container-scroll-animation.tsx
Size: 2.53 KB
Code:
"use client";
import React, { useRef } from "react";
import { useScroll, useTransform, motion, MotionValue } from "framer-motion";

export const ContainerScroll = ({
  titleComponent,
  children,
}: {
  titleComponent: string | React.ReactNode;
  children: React.ReactNode;
}) => {
  const containerRef = useRef<HTMLDivElement>(null);
  const { scrollYProgress } = useScroll({
    target: containerRef,
  });
  const [isMobile, setIsMobile] = React.useState(false);

  React.useEffect(() => {
    const checkMobile = () => {
      setIsMobile(window.innerWidth <= 768);
    };
    checkMobile();
    window.addEventListener("resize", checkMobile);
    return () => {
      window.removeEventListener("resize", checkMobile);
    };
  }, []);

  const scaleDimensions = () => {
    return isMobile ? [0.7, 0.9] : [1.05, 1];
  };

  const rotate = useTransform(scrollYProgress, [0, 1], [20, 0]);
  const scale = useTransform(scrollYProgress, [0, 1], scaleDimensions());
  const translate = useTransform(scrollYProgress, [0, 1], [0, -100]);

  return (
    <div
      className="h-[60rem] md:h-[80rem] flex items-center justify-center relative p-2 md:p-20"
      ref={containerRef}
    >
      <div
        className="py-10 md:py-40 w-full relative"
        style={{
          perspective: "1000px",
        }}
      >
        <Header translate={translate} titleComponent={titleComponent} />
        <Card rotate={rotate} translate={translate} scale={scale}>
          {children}
        </Card>
      </div>
    </div>
  );
};

export const Header = ({ translate, titleComponent }: any) => {
  return (
    <motion.div
      style={{
        translateY: translate,
      }}
      className="div max-w-5xl mx-auto text-center"
    >
      {titleComponent}
    </motion.div>
  );
};

export const Card = ({
  rotate,
  scale,
  children,
}: {
  rotate: MotionValue<number>;
  scale: MotionValue<number>;
  translate: MotionValue<number>;
  children: React.ReactNode;
}) => {
  return (
    <motion.div
      style={{
        rotateX: rotate,
        scale,
        boxShadow:
          "0 0 #0000004d, 0 9px 20px #0000004a, 0 37px 37px #00000042, 0 84px 50px #00000026, 0 149px 60px #0000000a, 0 233px 65px #00000003",
      }}
      className="max-w-5xl -mt-12 mx-auto h-[30rem] md:h-[40rem] w-full border-4 border-pink-300/50 p-2 md:p-6 bg-gradient-to-br from-pink-100 to-rose-200 rounded-[30px] shadow-2xl"
    >
      <div className=" h-full w-full  overflow-hidden rounded-2xl bg-white/80 backdrop-blur-sm md:rounded-2xl md:p-4 ">
        {children}
      </div>
    </motion.div>
  );
};
-------- [ Separator ] ------

File Name: src\index.css
Size: 2.75 KB
Code:
@tailwind base;
@tailwind components;
@tailwind utilities;

@layer utilities {
  .animate-gradient-shift {
    background-size: 400% 400%;
    animation: gradientShift 12s ease infinite;
  }
  
  .animate-float {
    animation: float 6s ease-in-out infinite;
  }
  
  .animate-float-up {
    animation: floatUp 4s linear forwards;
  }
  
  .animate-fade-in {
    animation: fadeIn 2s ease-out forwards;
  }
  
  .animate-spin-slow {
    animation: spin 4s linear infinite;
  }
}

@keyframes gradientShift {
  0% {
    background-position: 0% 50%;
  }
  25% {
    background-position: 100% 50%;
  }
  50% {
    background-position: 100% 100%;
  }
  75% {
    background-position: 0% 100%;
  }
  100% {
    background-position: 0% 50%;
  }
}

@keyframes float {
  0%, 100% {
    transform: translateY(0px) rotate(-2deg);
  }
  33% {
    transform: translateY(-25px) rotate(1deg);
  }
  66% {
    transform: translateY(-15px) rotate(-1deg);
  }
}

@keyframes floatUp {
  0% {
    transform: translateY(0px) rotate(0deg);
    opacity: 1;
  }
  100% {
    transform: translateY(-120vh) rotate(360deg);
    opacity: 0;
  }
}

@keyframes fadeIn {
  from {
    opacity: 0;
    transform: translateY(40px);
  }
  to {
    opacity: 1;
    transform: translateY(0);
  }
}

/* Enhanced scrollbar */
::-webkit-scrollbar {
  width: 12px;
}

::-webkit-scrollbar-track {
  background: rgba(255, 255, 255, 0.1);
  border-radius: 6px;
}

::-webkit-scrollbar-thumb {
  background: linear-gradient(45deg, rgba(255, 182, 193, 0.6), rgba(255, 105, 180, 0.6));
  border-radius: 6px;
  border: 2px solid rgba(255, 255, 255, 0.1);
}

::-webkit-scrollbar-thumb:hover {
  background: linear-gradient(45deg, rgba(255, 182, 193, 0.8), rgba(255, 105, 180, 0.8));
}

/* Beautiful text shadows for readability */
.text-shadow {
  text-shadow: 2px 2px 8px rgba(0, 0, 0, 0.3);
}

/* Enhanced responsive design */
@media (max-width: 768px) {
  .text-6xl {
    font-size: 3.5rem;
    line-height: 1.1;
  }
  .text-8xl {
    font-size: 4.5rem;
    line-height: 1.1;
  }
  .text-5xl {
    font-size: 2.5rem;
  }
  .text-4xl {
    font-size: 2rem;
  }
}

@media (max-width: 480px) {
  .text-6xl {
    font-size: 2.5rem;
  }
  .text-8xl {
    font-size: 3rem;
  }
}

/* Smooth transitions for all interactive elements */
* {
  transition: color 0.3s ease, background-color 0.3s ease, transform 0.3s ease;
}

/* Enhanced backdrop blur support */
@supports (backdrop-filter: blur(10px)) {
  .backdrop-blur-md {
    backdrop-filter: blur(12px);
  }
  .backdrop-blur-sm {
    backdrop-filter: blur(8px);
  }
}

/* Fallback for browsers without backdrop-filter */
@supports not (backdrop-filter: blur(10px)) {
  .backdrop-blur-md {
    background-color: rgba(255, 255, 255, 0.25);
  }
  .backdrop-blur-sm {
    background-color: rgba(255, 255, 255, 0.2);
  }
}
-------- [ Separator ] ------

File Name: src\lib\utils.ts
Size: 165 B
Code:
import { type ClassValue, clsx } from "clsx"
import { twMerge } from "tailwind-merge"

export function cn(...inputs: ClassValue[]) {
  return twMerge(clsx(inputs))
}
-------- [ Separator ] ------

File Name: src\main.tsx
Size: 234 B
Code:
import { StrictMode } from 'react';
import { createRoot } from 'react-dom/client';
import App from './App.tsx';
import './index.css';

createRoot(document.getElementById('root')!).render(
  <StrictMode>
    <App />
  </StrictMode>
);

-------- [ Separator ] ------

File Name: src\vite-env.d.ts
Size: 38 B
Code:
/// <reference types="vite/client" />

-------- [ Separator ] ------

File Name: tailwind.config.js
Size: 170 B
Code:
/** @type {import('tailwindcss').Config} */
export default {
  content: ['./index.html', './src/**/*.{js,ts,jsx,tsx}'],
  theme: {
    extend: {},
  },
  plugins: [],
};

-------- [ Separator ] ------

File Name: tsconfig.app.json
Size: 552 B
Code:
{
  "compilerOptions": {
    "target": "ES2020",
    "useDefineForClassFields": true,
    "lib": ["ES2020", "DOM", "DOM.Iterable"],
    "module": "ESNext",
    "skipLibCheck": true,

    /* Bundler mode */
    "moduleResolution": "bundler",
    "allowImportingTsExtensions": true,
    "isolatedModules": true,
    "moduleDetection": "force",
    "noEmit": true,
    "jsx": "react-jsx",

    /* Linting */
    "strict": true,
    "noUnusedLocals": true,
    "noUnusedParameters": true,
    "noFallthroughCasesInSwitch": true
  },
  "include": ["src"]
}

-------- [ Separator ] ------

File Name: tsconfig.node.json
Size: 479 B
Code:
{
  "compilerOptions": {
    "target": "ES2022",
    "lib": ["ES2023"],
    "module": "ESNext",
    "skipLibCheck": true,

    /* Bundler mode */
    "moduleResolution": "bundler",
    "allowImportingTsExtensions": true,
    "isolatedModules": true,
    "moduleDetection": "force",
    "noEmit": true,

    /* Linting */
    "strict": true,
    "noUnusedLocals": true,
    "noUnusedParameters": true,
    "noFallthroughCasesInSwitch": true
  },
  "include": ["vite.config.ts"]
}

-------- [ Separator ] ------

File Name: vite.config.ts
Size: 327 B
Code:
import { defineConfig } from 'vite';
import react from '@vitejs/plugin-react';
import path from 'path';

// https://vitejs.dev/config/
export default defineConfig({
  plugins: [react()],
  resolve: {
    alias: {
      "@": path.resolve(__dirname, "./src"),
    },
  },
  optimizeDeps: {
    exclude: ['lucide-react'],
  },
});
-------- [ Separator ] ------

-------- [ Separator ] ------

File Name: components.json
Size: 322 B
Code:
{
  "$schema": "https://ui.shadcn.com/schema.json",
  "style": "default",
  "rsc": false,
  "tsx": true,
  "tailwind": {
    "config": "tailwind.config.js",
    "css": "src/index.css",
    "baseColor": "slate",
    "cssVariables": true
  },
  "aliases": {
    "components": "@/components",
    "utils": "@/lib/utils"
  }
}
-------- [ Separator ] ------

File Name: eslint.config.js
Size: 739 B
Code:
import js from '@eslint/js';
import globals from 'globals';
import reactHooks from 'eslint-plugin-react-hooks';
import reactRefresh from 'eslint-plugin-react-refresh';
import tseslint from 'typescript-eslint';

export default tseslint.config(
  { ignores: ['dist'] },
  {
    extends: [js.configs.recommended, ...tseslint.configs.recommended],
    files: ['**/*.{ts,tsx}'],
    languageOptions: {
      ecmaVersion: 2020,
      globals: globals.browser,
    },
    plugins: {
      'react-hooks': reactHooks,
      'react-refresh': reactRefresh,
    },
    rules: {
      ...reactHooks.configs.recommended.rules,
      'react-refresh/only-export-components': [
        'warn',
        { allowConstantExport: true },
      ],
    },
  }
);

-------- [ Separator ] ------

File Name: index.html
Size: 2.31 KB
Code:
<!doctype html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <link rel="icon" type="image/svg+xml" href="/vite.svg" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Sanjeev & Deepali - 23 Years of Love | संजीव आणि दीपाली</title>
    <meta name="description" content="Celebrating 23 years of love - Sanjeev and Deepali's wedding memories from April 25, 2002">
    
    <!-- Google Fonts for beautiful typography -->
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link href="https://fonts.googleapis.com/css2?family=Crimson+Text:ital,wght@0,400;0,600;1,400&family=Great+Vibes&family=Playfair+Display:ital,wght@0,400;0,600;0,700;1,400&family=Noto+Sans+Devanagari:wght@300;400;600;700&family=Cormorant+Garamond:ital,wght@0,300;0,400;0,600;1,400&display=swap" rel="stylesheet">
    
    <style>
      /* Beautiful font families */
      .font-elegant {
        font-family: 'Playfair Display', serif;
      }
      .font-script {
        font-family: 'Great Vibes', cursive;
      }
      .font-marathi {
        font-family: 'Noto Sans Devanagari', sans-serif;
      }
      .font-body {
        font-family: 'Crimson Text', serif;
      }
      .font-classic {
        font-family: 'Cormorant Garamond', serif;
      }
      
      /* Prevent text selection on decorative elements */
      .no-select {
        -webkit-user-select: none;
        -moz-user-select: none;
        -ms-user-select: none;
        user-select: none;
      }

      /* Pink click effect */
      .click-effect {
        position: relative;
        overflow: hidden;
      }
      
      .click-effect::after {
        content: '';
        position: absolute;
        top: 50%;
        left: 50%;
        width: 0;
        height: 0;
        background: radial-gradient(circle, rgba(255, 182, 193, 0.6) 0%, transparent 70%);
        border-radius: 50%;
        transform: translate(-50%, -50%);
        transition: width 0.6s ease, height 0.6s ease;
        pointer-events: none;
      }
      
      .click-effect:active::after {
        width: 200px;
        height: 200px;
      }
    </style>
  </head>
  <body>
    <div id="root"></div>
    <script type="module" src="/src/main.tsx"></script>
  </body>
</html>
-------- [ Separator ] ------

File Name: package.json
Size: 897 B
Code:
{
  "name": "vite-react-typescript-starter",
  "private": true,
  "version": "0.0.0",
  "type": "module",
  "scripts": {
    "dev": "vite",
    "build": "vite build",
    "lint": "eslint .",
    "preview": "vite preview"
  },
  "dependencies": {
    "framer-motion": "^10.16.16",
    "lucide-react": "^0.344.0",
    "react": "^18.3.1",
    "react-dom": "^18.3.1",
    "clsx": "^2.0.0",
    "tailwind-merge": "^2.2.0"
  },
  "devDependencies": {
    "@eslint/js": "^9.9.1",
    "@types/react": "^18.3.5",
    "@types/react-dom": "^18.3.0",
    "@vitejs/plugin-react": "^4.3.1",
    "autoprefixer": "^10.4.18",
    "eslint": "^9.9.1",
    "eslint-plugin-react-hooks": "^5.1.0-rc.0",
    "eslint-plugin-react-refresh": "^0.4.11",
    "globals": "^15.9.0",
    "postcss": "^8.4.35",
    "tailwindcss": "^3.4.1",
    "typescript": "^5.5.3",
    "typescript-eslint": "^8.3.0",
    "vite": "^5.4.2"
  }
}
-------- [ Separator ] ------

File Name: postcss.config.js
Size: 81 B
Code:
export default {
  plugins: {
    tailwindcss: {},
    autoprefixer: {},
  },
};

-------- [ Separator ] ------

File Name: src\App.tsx
Size: 25.14 KB
Code:
import React, { useEffect, useState } from 'react';
import { motion, AnimatePresence } from 'framer-motion';
import { Heart, Star, Sparkles, Calendar, Camera } from 'lucide-react';
import { HeroScrollDemo } from '@/components/HeroScrollDemo';

// Enhanced Marathi quotes with English translations
const loveQuotes = [
  {
    marathi: "प्रेम म्हणजे दोन हृदयांचा एकच ठोका",
    english: "Love is two hearts beating as one",
    id: 1
  },
  {
    marathi: "तुझ्याशिवाय माझे जीवन अधूरे आहे",
    english: "Without you, my life is incomplete",
    id: 2
  },
  {
    marathi: "आमचे प्रेम चांद्रातारांसारखे निरंतर आहे",
    english: "Our love is eternal like the moon and stars",
    id: 3
  },
  {
    marathi: "तू माझा साथी, मित्र आणि प्रेयसी आहेस",
    english: "You are my companion, friend, and beloved",
    id: 4
  },
  {
    marathi: "आमचे लग्न स्वर्गात ठरले होते",
    english: "Our marriage was made in heaven",
    id: 5
  },
  {
    marathi: "प्रेम हे जीवनातील सर्वात सुंदर भावना आहे",
    english: "Love is life's most beautiful emotion",
    id: 6
  },
  {
    marathi: "तेईस वर्षे, एकच प्रेम",
    english: "Twenty-three years, one love",
    id: 7
  },
  {
    marathi: "आमची प्रेमकहाणी कधीच संपणार नाही",
    english: "Our love story will never end",
    id: 8
  }
];

// Additional inspirational quotes for sections
const sectionQuotes = [
  {
    marathi: "प्रेमात वय नसते, फक्त भावना असते",
    english: "Love has no age, only emotions"
  },
  {
    marathi: "खरे प्रेम वेळेसोबत वाढत जाते",
    english: "True love grows with time"
  },
  {
    marathi: "आमचे बंध अजूनही मजबूत आहे",
    english: "Our bond is still strong"
  },
  {
    marathi: "प्रेमाची शक्ती अजेय आहे",
    english: "The power of love is invincible"
  },
  {
    marathi: "आमचे हृदय एकत्र धडधडते",
    english: "Our hearts beat together"
  }
];

// Enhanced Floating Hearts Component with more variety
const FloatingHearts = () => {
  const [hearts, setHearts] = useState<Array<{ 
    id: number; 
    left: number; 
    size: number; 
    color: string;
    delay: number;
  }>>([]);

  const heartColors = ['text-pink-400', 'text-red-400', 'text-rose-400', 'text-pink-500', 'text-red-500'];

  useEffect(() => {
    const interval = setInterval(() => {
      const newHeart = {
        id: Date.now() + Math.random(),
        left: Math.random() * 100,
        size: Math.random() * 25 + 15,
        color: heartColors[Math.floor(Math.random() * heartColors.length)],
        delay: Math.random() * 2
      };
      setHearts(prev => [...prev, newHeart]);
      
      setTimeout(() => {
        setHearts(prev => prev.filter(heart => heart.id !== newHeart.id));
      }, 6000);
    }, 600);

    return () => clearInterval(interval);
  }, []);

  return (
    <div className="fixed inset-0 pointer-events-none z-10">
      <AnimatePresence>
        {hearts.map(heart => (
          <motion.div
            key={heart.id}
            initial={{ y: '100vh', opacity: 0, rotate: 0, scale: 0 }}
            animate={{ 
              y: '-20vh', 
              opacity: [0, 1, 1, 0],
              rotate: [0, 180, 360],
              scale: [0, 1, 1, 0],
              x: [0, 50, -30, 20, 0]
            }}
            exit={{ opacity: 0, scale: 0 }}
            transition={{ 
              duration: 6,
              ease: "easeOut",
              times: [0, 0.1, 0.8, 1],
              delay: heart.delay
            }}
            className="absolute"
            style={{ left: `${heart.left}%` }}
          >
            <Heart 
              className={`${heart.color} fill-current drop-shadow-lg`}
              style={{ width: heart.size, height: heart.size }}
            />
          </motion.div>
        ))}
      </AnimatePresence>
    </div>
  );
};

// Enhanced Floating Sparkles
const FloatingSparkles = () => {
  const [sparkles, setSparkles] = useState<Array<{ 
    id: number; 
    left: number; 
    top: number;
    size: number; 
    delay: number;
  }>>([]);

  useEffect(() => {
    const interval = setInterval(() => {
      const newSparkle = {
        id: Date.now() + Math.random(),
        left: Math.random() * 100,
        top: Math.random() * 100,
        size: Math.random() * 15 + 10,
        delay: Math.random() * 3
      };
      setSparkles(prev => [...prev, newSparkle]);
      
      setTimeout(() => {
        setSparkles(prev => prev.filter(sparkle => sparkle.id !== newSparkle.id));
      }, 4000);
    }, 1200);

    return () => clearInterval(interval);
  }, []);

  return (
    <div className="fixed inset-0 pointer-events-none z-10">
      <AnimatePresence>
        {sparkles.map(sparkle => (
          <motion.div
            key={sparkle.id}
            initial={{ opacity: 0, scale: 0, rotate: 0 }}
            animate={{ 
              opacity: [0, 1, 1, 0],
              scale: [0, 1, 1.2, 0],
              rotate: [0, 180, 360]
            }}
            exit={{ opacity: 0, scale: 0 }}
            transition={{ 
              duration: 4,
              ease: "easeInOut",
              delay: sparkle.delay
            }}
            className="absolute"
            style={{ 
              left: `${sparkle.left}%`,
              top: `${sparkle.top}%`
            }}
          >
            <Sparkles 
              className="text-yellow-300 fill-current drop-shadow-lg"
              style={{ width: sparkle.size, height: sparkle.size }}
            />
          </motion.div>
        ))}
      </AnimatePresence>
    </div>
  );
};

// Enhanced Floating Balloon Component
const FloatingBalloon = ({ quote, delay }: { quote: typeof loveQuotes[0], delay: number }) => {
  return (
    <motion.div 
      className="absolute"
      style={{
        left: `${Math.random() * 80 + 10}%`,
        top: `${Math.random() * 60 + 20}%`
      }}
      initial={{ y: 100, opacity: 0, scale: 0 }}
      animate={{ 
        y: [0, -30, -15, 0],
        opacity: 1,
        scale: 1,
        rotate: [-3, 2, -1, -3]
      }}
      transition={{
        duration: 8,
        repeat: Infinity,
        delay: delay,
        ease: "easeInOut"
      }}
    >
      <div className="relative group cursor-pointer">
        <motion.div 
          className="transform hover:scale-110 transition-transform duration-300"
          whileHover={{ scale: 1.2, y: -10 }}
          whileTap={{ scale: 0.9 }}
        >
          {/* Enhanced Balloon */}
          <div className="w-20 h-24 bg-gradient-to-b from-pink-400 via-rose-400 to-red-500 rounded-full relative shadow-2xl">
            <div className="absolute inset-2 bg-gradient-to-b from-pink-300 to-pink-400 rounded-full opacity-70"></div>
            <div className="absolute top-3 left-4 w-8 h-8 bg-white opacity-50 rounded-full"></div>
            <div className="absolute top-6 left-6 w-3 h-3 bg-white opacity-80 rounded-full"></div>
          </div>
          {/* String */}
          <div className="w-0.5 h-12 bg-gray-700 mx-auto shadow-sm"></div>
        </motion.div>
        
        {/* Enhanced Quote tooltip */}
        <div className="absolute bottom-full left-1/2 transform -translate-x-1/2 mb-4 opacity-0 group-hover:opacity-100 transition-all duration-500 pointer-events-none z-50">
          <motion.div 
            className="bg-white/95 backdrop-blur-sm rounded-2xl p-6 shadow-2xl border-2 border-pink-200 min-w-80"
            initial={{ scale: 0.8, y: 10 }}
            whileHover={{ scale: 1, y: 0 }}
            transition={{ duration: 0.3 }}
          >
            <p className="text-purple-800 font-bold text-lg mb-3 font-marathi">{quote.marathi}</p>
            <p className="text-pink-600 text-base italic font-body">{quote.english}</p>
            <div className="absolute top-full left-1/2 transform -translate-x-1/2 border-l-10 border-r-10 border-t-10 border-transparent border-t-white/95"></div>
          </motion.div>
        </div>
      </div>
    </motion.div>
  );
};

// Google Drive Video Component
const GoogleDriveVideo = ({ title, description, driveId, index }: {
  title: string;
  description: string;
  driveId: string;
  index: number;
}) => {
  return (
    <motion.div 
      className="bg-white/15 backdrop-blur-md rounded-3xl p-6 shadow-2xl border border-pink-200/30 hover:shadow-pink-500/20 transition-all duration-500 click-effect"
      initial={{ opacity: 0, y: 50, scale: 0.9 }}
      whileInView={{ opacity: 1, y: 0, scale: 1 }}
      transition={{ delay: index * 0.2, duration: 0.8 }}
      whileHover={{ scale: 1.03, y: -8 }}
      viewport={{ once: true }}
    >
      <div className="relative overflow-hidden rounded-2xl mb-6 group">
        <iframe
          src={`https://drive.google.com/file/d/${driveId}/preview`}
          className="w-full h-64 rounded-2xl"
          allow="autoplay"
          title={title}
        ></iframe>
        <div className="absolute inset-0 bg-gradient-to-t from-black/30 to-transparent opacity-0 group-hover:opacity-100 transition-opacity duration-300 rounded-2xl"></div>
      </div>
      <motion.h3 
        className="text-2xl font-bold text-white mb-3 font-elegant"
        initial={{ opacity: 0 }}
        whileInView={{ opacity: 1 }}
        transition={{ delay: index * 0.3 + 0.2 }}
      >
        {title}
      </motion.h3>
      <motion.p 
        className="text-pink-100 text-base font-body leading-relaxed"
        initial={{ opacity: 0 }}
        whileInView={{ opacity: 1 }}
        transition={{ delay: index * 0.3 + 0.4 }}
      >
        {description}
      </motion.p>
    </motion.div>
  );
};

// Photo Upload Placeholder Component
const PhotoPlaceholder = ({ title, subtitle }: { title: string; subtitle?: string }) => {
  return (
    <motion.div 
      className="bg-white/10 backdrop-blur-md rounded-3xl p-8 border-2 border-dashed border-pink-300/50 hover:border-pink-300 transition-all duration-300 click-effect"
      whileHover={{ scale: 1.02, borderColor: 'rgb(249 168 212)' }}
      whileTap={{ scale: 0.98 }}
      initial={{ opacity: 0, y: 30 }}
      whileInView={{ opacity: 1, y: 0 }}
      transition={{ duration: 0.6 }}
      viewport={{ once: true }}
    >
      <div className="text-center space-y-4">
        <motion.div
          animate={{ rotate: [0, 10, -10, 0] }}
          transition={{ duration: 2, repeat: Infinity, ease: "easeInOut" }}
        >
          <Camera className="w-16 h-16 text-pink-300 mx-auto" />
        </motion.div>
        <h3 className="text-2xl font-bold text-white font-elegant">{title}</h3>
        {subtitle && <p className="text-pink-200 font-body">{subtitle}</p>}
        <p className="text-pink-100 text-sm font-body">
          Replace this section with your beautiful photos
        </p>
      </div>
    </motion.div>
  );
};

function App() {
  return (
    <div className="min-h-screen relative overflow-hidden">
      {/* Professional Pink/Red Gradient Background */}
      <div className="fixed inset-0 bg-gradient-to-br from-pink-500 via-rose-500 via-red-400 to-pink-600 animate-gradient-shift"></div>
      
      {/* Enhanced Floating Animations */}
      <FloatingHearts />
      <FloatingSparkles />
      
      {/* Floating Balloons */}
      <div className="fixed inset-0 pointer-events-none z-20">
        {loveQuotes.map((quote, index) => (
          <FloatingBalloon 
            key={quote.id} 
            quote={quote} 
            delay={index * 2} 
          />
        ))}
      </div>

      {/* Main Content */}
      <div className="relative z-30">
        {/* Hero Section with Scroll Animation */}
        <section className="min-h-screen">
          <HeroScrollDemo />
        </section>

        {/* Enhanced Inspirational Quote Section */}
        <section className="py-20 px-4">
          <motion.div 
            className="max-w-4xl mx-auto text-center"
            initial={{ opacity: 0, scale: 0.9 }}
            whileInView={{ opacity: 1, scale: 1 }}
            transition={{ duration: 0.8 }}
            viewport={{ once: true }}
          >
            <motion.div 
              className="bg-white/15 backdrop-blur-md rounded-3xl p-12 border border-pink-200/30 relative overflow-hidden"
              whileHover={{ scale: 1.02 }}
              transition={{ duration: 0.3 }}
            >
              {/* Decorative elements */}
              <div className="absolute top-4 left-4">
                <Heart className="w-8 h-8 text-pink-300 fill-current opacity-30" />
              </div>
              <div className="absolute bottom-4 right-4">
                <Sparkles className="w-8 h-8 text-yellow-300 opacity-30" />
              </div>
              
              <motion.h3 
                className="text-4xl font-bold text-white mb-6 font-marathi"
                initial={{ opacity: 0, y: 20 }}
                whileInView={{ opacity: 1, y: 0 }}
                transition={{ delay: 0.2 }}
              >
                {sectionQuotes[0].marathi}
              </motion.h3>
              <motion.p 
                className="text-xl text-pink-100 italic font-body"
                initial={{ opacity: 0, y: 20 }}
                whileInView={{ opacity: 1, y: 0 }}
                transition={{ delay: 0.4 }}
              >
                {sectionQuotes[0].english}
              </motion.p>
            </motion.div>
          </motion.div>
        </section>

        {/* Enhanced Video Section */}
        <section className="py-20 px-4">
          <div className="max-w-7xl mx-auto">
            <motion.div 
              className="text-center mb-16"
              initial={{ opacity: 0, y: 50 }}
              whileInView={{ opacity: 1, y: 0 }}
              transition={{ duration: 0.8 }}
              viewport={{ once: true }}
            >
              <motion.h2 
                className="text-5xl font-bold text-white mb-6 font-elegant"
                initial={{ scale: 0.8 }}
                whileInView={{ scale: 1 }}
                transition={{ duration: 0.6, delay: 0.2 }}
              >
                आमच्या लग्नाचे व्हिडिओ
              </motion.h2>
              <motion.p 
                className="text-pink-100 text-2xl italic font-body mb-4"
                initial={{ opacity: 0 }}
                whileInView={{ opacity: 1 }}
                transition={{ delay: 0.4 }}
              >
                Our Wedding Videos
              </motion.p>
              <motion.div 
                className="flex items-center justify-center mt-6"
                initial={{ opacity: 0, scale: 0 }}
                whileInView={{ opacity: 1, scale: 1 }}
                transition={{ delay: 0.6, duration: 0.5 }}
              >
                <Star className="w-6 h-6 text-yellow-300 fill-current" />
                <Star className="w-8 h-8 text-yellow-300 fill-current mx-3" />
                <Star className="w-6 h-6 text-yellow-300 fill-current" />
              </motion.div>
            </motion.div>

            <div className="grid md:grid-cols-3 gap-8 mb-16">

<div
  style={{
    border: '3px solid #E75480',
    borderRadius: 20,
    padding: 15,
    margin: '20px 0',
    background: '#FFD1E3',
    boxShadow: '0 4px 12px rgba(231, 84, 128, 0.18)',
    maxWidth: 390,
    textAlign: 'center'
  }}
>
  <h3
    style={{
      fontWeight: 800,
      fontSize: '1.6em',
      marginBottom: 18,
      background: 'linear-gradient(90deg, #ffecd2 0%, #fcb69f 40%, #e75480 70%, #fcb69f 100%)',
      WebkitBackgroundClip: 'text',
      WebkitTextFillColor: 'transparent',
      textShadow: '0 2px 8px #fff, 0 1px 1px #e75480'
    }}
  >
    श्रीमंत पूजन
  </h3>
  <div style={{ display: 'flex', justifyContent: 'center' }}>
    <iframe
      src="https://drive.google.com/file/d/1MSW-qaKZFn4yqebM1gHpOT8y2JXfJPPd/preview"
      width="370"
      height="480"
      allow="autoplay; fullscreen"
      allowFullScreen
      style={{
        borderRadius: 15,
        border: '2px solid #e75480',
        boxShadow: '0 2px 10px rgba(231, 84, 128, 0.16)'
      }}
      title="श्रीमंत पूजन"
    ></iframe>
  </div>
</div>

<div
  style={{
    border: '3px solid #E75480',
    borderRadius: 20,
    padding: 15,
    margin: '20px 0',
    background: '#FFD1E3',
    boxShadow: '0 4px 12px rgba(231, 84, 128, 0.18)',
    maxWidth: 390,
    textAlign: 'center'
  }}
>
  <h3
    style={{
      fontWeight: 800,
      fontSize: '1.6em',
      marginBottom: 18,
      background: 'linear-gradient(90deg, #ffecd2 0%, #fcb69f 40%, #e75480 70%, #fcb69f 100%)',
      WebkitBackgroundClip: 'text',
      WebkitTextFillColor: 'transparent',
      textShadow: '0 2px 8px #fff, 0 1px 1px #e75480'
    }}
  >
    वरात
  </h3>
  <div style={{ display: 'flex', justifyContent: 'center' }}>
    <iframe
      src="https://drive.google.com/file/d/17QkLS05IX4GVMdpsWR3SPHBGRpi-ywEa/preview"
      width="370"
      height="480"
      allow="autoplay; fullscreen"
      allowFullScreen
      style={{
        borderRadius: 15,
        border: '2px solid #e75480',
        boxShadow: '0 2px 10px rgba(231, 84, 128, 0.16)'
      }}
      title="वरात"
    ></iframe>
  </div>
</div>

<div
  style={{
    border: '3px solid #E75480',
    borderRadius: 20,
    padding: 15,
    margin: '20px 0',
    background: '#FFD1E3',
    boxShadow: '0 4px 12px rgba(231, 84, 128, 0.18)',
    maxWidth: 390,
    textAlign: 'center'
  }}
>
  <h3
    style={{
      fontWeight: 800,
      fontSize: '1.6em',
      marginBottom: 18,
      background: 'linear-gradient(90deg, #ffecd2 0%, #fcb69f 40%, #e75480 70%, #fcb69f 100%)',
      WebkitBackgroundClip: 'text',
      WebkitTextFillColor: 'transparent',
      textShadow: '0 2px 8px #fff, 0 1px 1px #e75480'
    }}
  >
    लग्न
  </h3>
  <div style={{ display: 'flex', justifyContent: 'center' }}>
    <iframe
      src="https://drive.google.com/file/d/1h_msCOsqAzFlz89oN8na2T3-pybprLSD/preview"
      width="370"
      height="480"
      allow="autoplay; fullscreen"
      allowFullScreen
      style={{
        borderRadius: 15,
        border: '2px solid #e75480',
        boxShadow: '0 2px 10px rgba(231, 84, 128, 0.16)'
      }}
      title="लग्न"
    ></iframe>
  </div>
</div>




            </div>
          </div>
        </section>
        

        {/* Another Enhanced Quote Section */}
        <section className="py-16 px-4">
          <motion.div 
            className="max-w-4xl mx-auto text-center"
            initial={{ opacity: 0, rotateX: 20 }}
            whileInView={{ opacity: 1, rotateX: 0 }}
            transition={{ duration: 0.8 }}
            viewport={{ once: true }}
          >
            <div className="bg-white/15 backdrop-blur-md rounded-3xl p-12 border border-pink-200/30 relative">
              <motion.h3 
                className="text-4xl font-bold text-white mb-6 font-marathi"
                initial={{ opacity: 0, scale: 0.8 }}
                whileInView={{ opacity: 1, scale: 1 }}
                transition={{ delay: 0.2 }}
              >
                {sectionQuotes[1].marathi}
              </motion.h3>
              <motion.p 
                className="text-xl text-pink-100 italic font-body"
                initial={{ opacity: 0, y: 20 }}
                whileInView={{ opacity: 1, y: 0 }}
                transition={{ delay: 0.4 }}
              >
                {sectionQuotes[1].english}
              </motion.p>
            </div>
          </motion.div>
        </section>

        {/* Enhanced Still Going Strong Section */}
        <section className="py-20 px-4">
          <div className="max-w-4xl mx-auto text-center">
            <motion.div 
              className="bg-white/20 backdrop-blur-md rounded-3xl p-12 border border-pink-200/30 shadow-2xl relative overflow-hidden"
              initial={{ opacity: 0, scale: 0.8, y: 50 }}
              whileInView={{ opacity: 1, scale: 1, y: 0 }}
              transition={{ duration: 1 }}
              viewport={{ once: true }}
              whileHover={{ scale: 1.02 }}
            >
              {/* Enhanced decorative elements */}
              <motion.div 
                className="absolute top-6 left-6"
                animate={{ rotate: 360 }}
                transition={{ duration: 20, repeat: Infinity, ease: "linear" }}
              >
                <Heart className="w-12 h-12 text-pink-300 fill-current opacity-20" />
              </motion.div>
              <motion.div 
                className="absolute bottom-6 right-6"
                animate={{ rotate: -360 }}
                transition={{ duration: 15, repeat: Infinity, ease: "linear" }}
              >
                <Sparkles className="w-10 h-10 text-yellow-300 opacity-20" />
              </motion.div>
              
              {/* Photo placeholder for couple's current photo */}
<motion.div 
  className="mb-8 flex justify-center"
  initial={{ opacity: 0, scale: 0.8 }}
  whileInView={{ opacity: 1, scale: 1 }}
  transition={{ delay: 0.3 }}
>
  <img
    src="/still_strong.jpg"

    alt="Still Going Strong"
    className="rounded-3xl border-4 border-pink-200 shadow-xl max-w-xs"
    style={{ maxHeight: 320, objectFit: 'cover' }}
  />
</motion.div>

              <motion.h3 
                className="text-5xl font-bold text-white mb-4 font-elegant"
                initial={{ opacity: 0, y: 30 }}
                whileInView={{ opacity: 1, y: 0 }}
                transition={{ delay: 0.5 }}
              >
             Love not fading away
              </motion.h3>
              
              <motion.p 
                className="text-1.5xl text-pink-100 italic font-marathi"
                initial={{ opacity: 0, y: 20 }}
                whileInView={{ opacity: 1, y: 0 }}
                transition={{ delay: 0.7 }}
              >
              वय वाढलंय, पण प्रेम अजून तेच जुनं आणि खास आहे
              </motion.p>
              
              <motion.p 
                className="text-xl text-pink-200 italic font-body mb-8"
                initial={{ opacity: 0, y: 20 }}
                whileInView={{ opacity: 1, y: 0 }}
                transition={{ delay: 0.9 }}
              >
              We've aged, but our love is still the same—old and special.
              </motion.p> 

              <motion.div 
                className="flex items-center justify-center space-x-6"
                initial={{ opacity: 0, scale: 0 }}
                whileInView={{ opacity: 1, scale: 1 }}
                transition={{ delay: 1.1, type: "spring", stiffness: 200 }}
              >
                <motion.div
                  animate={{ scale: [1, 1.2, 1] }}
                  transition={{ duration: 2, repeat: Infinity }}
                >
                  <Heart className="w-12 h-12 text-red-400 fill-current" />
                </motion.div>
                <span className="text-4xl font-bold text-white font-elegant">
                  संजीव ♥ दीपाली
                </span>
                <motion.div
                  animate={{ scale: [1, 1.2, 1] }}
                  transition={{ duration: 2, repeat: Infinity, delay: 1 }}
                >
                  <Heart className="w-12 h-12 text-red-400 fill-current" />
                </motion.div>
              </motion.div>

              <motion.p 
                className="text-pink-200 text-lg mt-6 font-body"
                initial={{ opacity: 0 }}
                whileInView={{ opacity: 1 }}
                transition={{ delay: 1.3 }}
              >
                23 Years of Love • 2002 - 2025
              </motion.p>
            </motion.div>
          </div>
        </section>

        {/* Final Quote Section */}
        <section className="py-16 px-4">
          <motion.div 
            className="max-w-4xl mx-auto text-center"
            initial={{ opacity: 0 }}
            whileInView={{ opacity: 1 }}
            transition={{ duration: 1 }}
            viewport={{ once: true }}
          >
            <div className="bg-white/10 backdrop-blur-md rounded-3xl p-12 border border-pink-200/30">
              <motion.h3 
                className="text-4xl font-bold text-white mb-6 font-marathi"
                initial={{ opacity: 0, rotateY: 20 }}
                whileInView={{ opacity: 1, rotateY: 0 }}
                transition={{ delay: 0.2 }}
              >
              पूर्वी तिला गुलाब द्यायचो, आता pain balm देतो… प्रेमाचं evolution बघा!
              </motion.h3>
              <motion.p 
                className="text-xl text-pink-100 italic font-body"
                initial={{ opacity: 0, rotateY: -20 }}
                whileInView={{ opacity: 1, rotateY: 0 }}
                transition={{ delay: 0.4 }}
              >
              I used to give her roses, now I hand her pain balm… witness the evolution of love!
              </motion.p>
            </div>
          </motion.div>
        </section>
      </div>
    </div>
  );
}

export default App;
-------- [ Separator ] ------

File Name: src\components\HeroScrollDemo.tsx
Size: 5.98 KB
Code:
import React from "react";
import { ContainerScroll } from "@/components/ui/container-scroll-animation";
import { Heart, Sparkles, Calendar } from "lucide-react";
import { motion } from "framer-motion";

export function HeroScrollDemo() {
  return (
    <div className="flex flex-col overflow-hidden">
      <ContainerScroll
        titleComponent={
          <motion.div 
            className="space-y-8"
            initial={{ opacity: 0, y: 50 }}
            animate={{ opacity: 1, y: 0 }}
            transition={{ duration: 1.2 }}
          >
            <div className="flex items-center justify-center space-x-4 mb-6">
              <Heart className="w-12 h-12 text-pink-500 fill-current animate-pulse" />
              <Sparkles className="w-10 h-10 text-yellow-400 animate-spin-slow" />
              <Heart className="w-12 h-12 text-red-500 fill-current animate-pulse" />
            </div>
            
            <h1 className="text-4xl md:text-6xl font-bold text-white drop-shadow-2xl font-elegant text-center">
              <span className="bg-gradient-to-r from-yellow-200 to-pink-200 bg-clip-text text-transparent">
                संजीव आणि दीपाली
              </span>
            </h1>
            
            <p className="text-2xl md:text-3xl text-pink-100 font-marathi text-center">
              प्रेमाची २३ वर्षांची गाथा
            </p>
            
            <p className="text-lg md:text-xl text-pink-200 italic font-body text-center">
              23 Years of Love Story
            </p>
            
            <div className="flex items-center justify-center space-x-4 mt-8">
              <Calendar className="w-6 h-6 text-pink-200" />
              <div className="text-center">
                <p className="text-white text-xl font-semibold font-marathi">
                  २५ एप्रिल २००२
                </p>
                <p className="text-pink-100 text-base font-body">
                  April 25, 2002
                </p>
              </div>
            </div>
          </motion.div>
        }
      >
        <div className="relative h-full w-full">
          {/* Photo placeholder with beautiful styling */}
          <motion.div 
            className="h-full w-full bg-gradient-to-br from-pink-50 to-rose-100 rounded-2xl border-4 border-pink-200/50 flex items-center justify-center relative overflow-hidden"
            initial={{ opacity: 0, scale: 0.9 }}
            animate={{ opacity: 1, scale: 1 }}
            transition={{ delay: 0.5, duration: 0.8 }}
          >
            {/* Decorative elements */}
            <div className="absolute top-4 left-4">
              <Heart className="w-8 h-8 text-pink-400 fill-current opacity-60" />
            </div>
            <div className="absolute top-4 right-4">
              <Heart className="w-8 h-8 text-red-400 fill-current opacity-60" />
            </div>
            <div className="absolute bottom-4 left-4">
              <Sparkles className="w-6 h-6 text-yellow-400 opacity-60" />
            </div>
            <div className="absolute bottom-4 right-4">
              <Sparkles className="w-6 h-6 text-yellow-400 opacity-60" />
            </div>
            
            {/* Main content */}
<div className="text-center space-y-6 p-8">
  <h3 className="text-3xl font-bold text-pink-800 font-elegant mb-6">
    Wedding Memories
  </h3>
<div className="grid grid-cols-2 md:grid-cols- gap-6">
<img src="/photos/WhatsApp Image 2025-06-20 at 21.15.41_2e0c466f.jpg" alt="2025-06-20_at_21.15.41_2e0c466f" className="rounded-xl object-cover w-full aspect-square" />
<img src="/photos/WhatsApp Image 2025-06-20 at 21.15.42_89e8b3e5.jpg" alt="2025-06-20_at_21.15.42_89e8b3e5" className="rounded-xl object-cover w-full aspect-square" />
<img src="/photos/WhatsApp Image 2025-06-20 at 21.15.43_2b38e96a.jpg" alt="2025-06-20_at_21.15.43_2b38e96a" className="rounded-xl object-cover w-full aspect-square" />
<img src="/photos/WhatsApp Image 2025-06-20 at 21.15.43_41653e4b.jpg" alt="2025-06-20_at_21.15.43_41653e4b" className="rounded-xl object-cover w-full aspect-square" />
<img src="/photos/WhatsApp Image 2025-06-20 at 21.15.44_e8e7dd6e.jpg" alt="2025-06-20_at_21.15.44_e8e7dd6e" className="rounded-xl object-cover w-full aspect-square" />
<img src="/photos/WhatsApp Image 2025-06-20 at 21.15.45_67f680a0.jpg" alt="2025-06-20_at_21.15.45_67f680a0" className="rounded-xl object-cover w-full aspect-square" />
<img src="/photos/WhatsApp Image 2025-06-20 at 21.15.45_d9019950.jpg" alt="2025-06-20_at_21.15.45_d9019950" className="rounded-xl object-cover w-full aspect-square" />
<img src="/photos/WhatsApp Image 2025-06-20 at 21.15.46_1b6583ff.jpg" alt="2025-06-20_at_21.15.46_1b6583ff" className="rounded-xl object-cover w-full aspect-square" />
<img src="/photos/WhatsApp Image 2025-06-20 at 21.15.36_f81ef63b.jpg" alt="2025-06-20_at_21.15.36_f81ef63b" className="rounded-xl object-cover w-full aspect-square" />
<img src="/photos/WhatsApp Image 2025-06-20 at 21.15.37_8ed72600.jpg" alt="2025-06-20_at_21.15.37_8ed72600" className="rounded-xl object-cover w-full aspect-square" />
<img src="/photos/WhatsApp Image 2025-06-20 at 21.15.38_34e3864b.jpg" alt="2025-06-20_at_21.15.38_34e3864b" className="rounded-xl object-cover w-full aspect-square" />
<img src="/photos/WhatsApp Image 2025-06-20 at 21.15.38_f7dafee8.jpg" alt="2025-06-20_at_21.15.38_f7dafee8" className="rounded-xl object-cover w-full aspect-square" />
<img src="/photos/WhatsApp Image 2025-06-20 at 21.15.39_2aa71b9a.jpg" alt="2025-06-20_at_21.15.39_2aa71b9a" className="rounded-xl object-cover w-full aspect-square" />
<img src="/photos/WhatsApp Image 2025-06-20 at 21.15.40_1230a481.jpg" alt="2025-06-20_at_21.15.40_1230a481" className="rounded-xl object-cover w-full aspect-square" />
<img src="/photos/WhatsApp Image 2025-06-20 at 21.15.40_c99b6cc8.jpg" alt="2025-06-20_at_21.15.40_c99b6cc8" className="rounded-xl object-cover w-full aspect-square" />

</div>

</div>

          </motion.div>
        </div>
      </ContainerScroll>
    </div>
  );
}
-------- [ Separator ] ------

File Name: src\components\ui\container-scroll-animation.tsx
Size: 2.53 KB
Code:
"use client";
import React, { useRef } from "react";
import { useScroll, useTransform, motion, MotionValue } from "framer-motion";

export const ContainerScroll = ({
  titleComponent,
  children,
}: {
  titleComponent: string | React.ReactNode;
  children: React.ReactNode;
}) => {
  const containerRef = useRef<HTMLDivElement>(null);
  const { scrollYProgress } = useScroll({
    target: containerRef,
  });
  const [isMobile, setIsMobile] = React.useState(false);

  React.useEffect(() => {
    const checkMobile = () => {
      setIsMobile(window.innerWidth <= 768);
    };
    checkMobile();
    window.addEventListener("resize", checkMobile);
    return () => {
      window.removeEventListener("resize", checkMobile);
    };
  }, []);

  const scaleDimensions = () => {
    return isMobile ? [0.7, 0.9] : [1.05, 1];
  };

  const rotate = useTransform(scrollYProgress, [0, 1], [20, 0]);
  const scale = useTransform(scrollYProgress, [0, 1], scaleDimensions());
  const translate = useTransform(scrollYProgress, [0, 1], [0, -100]);

  return (
    <div
      className="h-[60rem] md:h-[80rem] flex items-center justify-center relative p-2 md:p-20"
      ref={containerRef}
    >
      <div
        className="py-10 md:py-40 w-full relative"
        style={{
          perspective: "1000px",
        }}
      >
        <Header translate={translate} titleComponent={titleComponent} />
        <Card rotate={rotate} translate={translate} scale={scale}>
          {children}
        </Card>
      </div>
    </div>
  );
};

export const Header = ({ translate, titleComponent }: any) => {
  return (
    <motion.div
      style={{
        translateY: translate,
      }}
      className="div max-w-5xl mx-auto text-center"
    >
      {titleComponent}
    </motion.div>
  );
};

export const Card = ({
  rotate,
  scale,
  children,
}: {
  rotate: MotionValue<number>;
  scale: MotionValue<number>;
  translate: MotionValue<number>;
  children: React.ReactNode;
}) => {
  return (
    <motion.div
      style={{
        rotateX: rotate,
        scale,
        boxShadow:
          "0 0 #0000004d, 0 9px 20px #0000004a, 0 37px 37px #00000042, 0 84px 50px #00000026, 0 149px 60px #0000000a, 0 233px 65px #00000003",
      }}
      className="max-w-5xl -mt-12 mx-auto h-[30rem] md:h-[40rem] w-full border-4 border-pink-300/50 p-2 md:p-6 bg-gradient-to-br from-pink-100 to-rose-200 rounded-[30px] shadow-2xl"
    >
      <div className=" h-full w-full  overflow-hidden rounded-2xl bg-white/80 backdrop-blur-sm md:rounded-2xl md:p-4 ">
        {children}
      </div>
    </motion.div>
  );
};
-------- [ Separator ] ------

File Name: src\index.css
Size: 2.75 KB
Code:
@tailwind base;
@tailwind components;
@tailwind utilities;

@layer utilities {
  .animate-gradient-shift {
    background-size: 400% 400%;
    animation: gradientShift 12s ease infinite;
  }
  
  .animate-float {
    animation: float 6s ease-in-out infinite;
  }
  
  .animate-float-up {
    animation: floatUp 4s linear forwards;
  }
  
  .animate-fade-in {
    animation: fadeIn 2s ease-out forwards;
  }
  
  .animate-spin-slow {
    animation: spin 4s linear infinite;
  }
}

@keyframes gradientShift {
  0% {
    background-position: 0% 50%;
  }
  25% {
    background-position: 100% 50%;
  }
  50% {
    background-position: 100% 100%;
  }
  75% {
    background-position: 0% 100%;
  }
  100% {
    background-position: 0% 50%;
  }
}

@keyframes float {
  0%, 100% {
    transform: translateY(0px) rotate(-2deg);
  }
  33% {
    transform: translateY(-25px) rotate(1deg);
  }
  66% {
    transform: translateY(-15px) rotate(-1deg);
  }
}

@keyframes floatUp {
  0% {
    transform: translateY(0px) rotate(0deg);
    opacity: 1;
  }
  100% {
    transform: translateY(-120vh) rotate(360deg);
    opacity: 0;
  }
}

@keyframes fadeIn {
  from {
    opacity: 0;
    transform: translateY(40px);
  }
  to {
    opacity: 1;
    transform: translateY(0);
  }
}

/* Enhanced scrollbar */
::-webkit-scrollbar {
  width: 12px;
}

::-webkit-scrollbar-track {
  background: rgba(255, 255, 255, 0.1);
  border-radius: 6px;
}

::-webkit-scrollbar-thumb {
  background: linear-gradient(45deg, rgba(255, 182, 193, 0.6), rgba(255, 105, 180, 0.6));
  border-radius: 6px;
  border: 2px solid rgba(255, 255, 255, 0.1);
}

::-webkit-scrollbar-thumb:hover {
  background: linear-gradient(45deg, rgba(255, 182, 193, 0.8), rgba(255, 105, 180, 0.8));
}

/* Beautiful text shadows for readability */
.text-shadow {
  text-shadow: 2px 2px 8px rgba(0, 0, 0, 0.3);
}

/* Enhanced responsive design */
@media (max-width: 768px) {
  .text-6xl {
    font-size: 3.5rem;
    line-height: 1.1;
  }
  .text-8xl {
    font-size: 4.5rem;
    line-height: 1.1;
  }
  .text-5xl {
    font-size: 2.5rem;
  }
  .text-4xl {
    font-size: 2rem;
  }
}

@media (max-width: 480px) {
  .text-6xl {
    font-size: 2.5rem;
  }
  .text-8xl {
    font-size: 3rem;
  }
}

/* Smooth transitions for all interactive elements */
* {
  transition: color 0.3s ease, background-color 0.3s ease, transform 0.3s ease;
}

/* Enhanced backdrop blur support */
@supports (backdrop-filter: blur(10px)) {
  .backdrop-blur-md {
    backdrop-filter: blur(12px);
  }
  .backdrop-blur-sm {
    backdrop-filter: blur(8px);
  }
}

/* Fallback for browsers without backdrop-filter */
@supports not (backdrop-filter: blur(10px)) {
  .backdrop-blur-md {
    background-color: rgba(255, 255, 255, 0.25);
  }
  .backdrop-blur-sm {
    background-color: rgba(255, 255, 255, 0.2);
  }
}
-------- [ Separator ] ------

File Name: src\lib\utils.ts
Size: 165 B
Code:
import { type ClassValue, clsx } from "clsx"
import { twMerge } from "tailwind-merge"

export function cn(...inputs: ClassValue[]) {
  return twMerge(clsx(inputs))
}
-------- [ Separator ] ------

File Name: src\main.tsx
Size: 234 B
Code:
import { StrictMode } from 'react';
import { createRoot } from 'react-dom/client';
import App from './App.tsx';
import './index.css';

createRoot(document.getElementById('root')!).render(
  <StrictMode>
    <App />
  </StrictMode>
);

-------- [ Separator ] ------

File Name: src\vite-env.d.ts
Size: 38 B
Code:
/// <reference types="vite/client" />

-------- [ Separator ] ------

File Name: tailwind.config.js
Size: 170 B
Code:
/** @type {import('tailwindcss').Config} */
export default {
  content: ['./index.html', './src/**/*.{js,ts,jsx,tsx}'],
  theme: {
    extend: {},
  },
  plugins: [],
};

-------- [ Separator ] ------

File Name: tsconfig.app.json
Size: 552 B
Code:
{
  "compilerOptions": {
    "target": "ES2020",
    "useDefineForClassFields": true,
    "lib": ["ES2020", "DOM", "DOM.Iterable"],
    "module": "ESNext",
    "skipLibCheck": true,

    /* Bundler mode */
    "moduleResolution": "bundler",
    "allowImportingTsExtensions": true,
    "isolatedModules": true,
    "moduleDetection": "force",
    "noEmit": true,
    "jsx": "react-jsx",

    /* Linting */
    "strict": true,
    "noUnusedLocals": true,
    "noUnusedParameters": true,
    "noFallthroughCasesInSwitch": true
  },
  "include": ["src"]
}

-------- [ Separator ] ------

File Name: tsconfig.node.json
Size: 479 B
Code:
{
  "compilerOptions": {
    "target": "ES2022",
    "lib": ["ES2023"],
    "module": "ESNext",
    "skipLibCheck": true,

    /* Bundler mode */
    "moduleResolution": "bundler",
    "allowImportingTsExtensions": true,
    "isolatedModules": true,
    "moduleDetection": "force",
    "noEmit": true,

    /* Linting */
    "strict": true,
    "noUnusedLocals": true,
    "noUnusedParameters": true,
    "noFallthroughCasesInSwitch": true
  },
  "include": ["vite.config.ts"]
}

-------- [ Separator ] ------

File Name: vite.config.ts
Size: 327 B
Code:
import { defineConfig } from 'vite';
import react from '@vitejs/plugin-react';
import path from 'path';

// https://vitejs.dev/config/
export default defineConfig({
  plugins: [react()],
  resolve: {
    alias: {
      "@": path.resolve(__dirname, "./src"),
    },
  },
  optimizeDeps: {
    exclude: ['lucide-react'],
  },
});
-------- [ Separator ] ------
